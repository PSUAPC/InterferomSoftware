#################################################
# 	FILE ORGANIZATION
#################################################

	I2CEnable.sh  	  -- Script to enable read after write single-go 
			     I2C Communication on the Raspberry Pi.
	
	transformScript.m -- Matlab script for taking the LSM303 data from mcal.log
			     to fit an ellipsoid in order to find the transform
			     matrix needed to properly align and scale the LSM303
			     magnetometer data.	

	main_i2cSniffer   -- Program to 'Sniff out' I2C devices. Will Enumate
			     over all I2C addresses looking for an ACK signal.
			     If found, it will report a device at that address.

	main_i2cKernTest  -- Test program to verify that the Kernel hook to access
			     base level I2C buffer worked correctly. This allowed
			     for the read after write single-go communication to be
			     accessed.

	main_Orient       -- Test program to dump the Original orientation sensor 
			     registers to verify connection and response
	
	main_Orient2      -- Test program to initialize and poll the original 
			     orientation sensors.

	main_Orient3      -- Test program to initialize and poll the new orientation 
			     sensors - the LSM303.

	main_i2cOrientCal -- Program to calibrate the new LSM303 orientation sensor. 
			     This program prompts the user to initiate aquisition 
			     "tests" that will take down either accelerometer or 
			     magnetometer data for a set period of time and log the
			     relevant data to a log file.
			     		
	main_i2c	  -- Test program to verify I2C communication with a PIC16 slave. 
			     This is for use in the power-up control circuity. Each device will
			     have a linked 14-pin PIC16 MCU, which will store the power status 
			     of the device as well as activate / deactivate / restart the device
			     via a constant logic signal or a pulse.


	To compile, use: make <programName>

	Programs can be executed using the standard execution method ./ 
	If the program returns "unable to open I2C bus", you may need to give the program root
	permissions, or simply run with a preceeding sudo.



